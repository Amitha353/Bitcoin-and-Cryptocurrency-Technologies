----------------------------------------------------------------------------------------------------------------------------------------
6.1 Anonymity Basics
----------------------------------------------------------------------------------------------------------------------------------------

-> Anonymous = without a name.
-> Bitcoin addresses are public key hashes rather than real identities.
-> computer scientist call this "pseudonymity".

* Anonymity in computer science
---------------------------------
-> Anonymity = pseudonymity + unlinkability;

-> unlinkability - Different interactions of the same user with the system should not be linked with each other.

Pseudonymity vs anonymity in forums
------------------------------------
-> Reddit - pick a long-term pseudonym. (Pseudonymity)
-> 4Chan - make posts with no attribution at all. (Anonymity)

# With Pseudonomity profile -> easy to link back together to your real identity.

* Why is unlinkability needed?
------------------------------
1. Many Bitcoin services require real identity.
2. Linked profiles can be deanonymized by a variety of side channels.

* Defining unlinkability in Bitcoin
--------------------------------------
-> Hard to link different address to same users.
-> Hard to link different transactions of the same user.
-> Harder to link sender of a payment to its recipient.

* Quantifying anonymity
------------------------
-> Complete unlinkability (among "all" addresses/transactions) is hard.

-> Anonymity set : measurement parameter - the set of all transactions that are hidden. The crowd that one attempts to blend into.

-> To calculate anonymity set:
  - define adversary model.
  - reason carefully about: what the adversary knows, doesn't know, and cannot know.

* Why anonymous cryptocurrencies?
------------------------------------
-> Block chain based currencies are totally publicly, and permanently traceable.
-> Without anonymity, privacy is much worse than traditional banking!

* What about money laundering?
-------------------------------
-> Legitimate worry.
-> Bottleneck: moving large flows into and out of Bitcoin ("cashing out") - hard. (BTC -> money ($))

* Anonymous e-cash : history
------------------------------
- David Chaum, 1982
- Blind signatures - Two-party protocol to create digital signature without signer knowing the input.

# Consider a Bank with a protocol for Anonymous e-cash through blind signatures
--------------------------------------------------------------------------------
1. Consider there is a Bank and it stores various things in its database. It stores two tables.
  -> Table 1 : Mapping between usera and their account balance.
  -> Table 2 : Spent coins.
2. Suppose a user wants to withdraw an anonymous coins from the system.
  - User wishes to withdraw an anonymous coin of standard denomination.
3. In response to the User's request the bank is gonna deduct the amount required my the user in the "Spent coins" table.
4. Then the bank and the user are gonna execute a "two party" protocol. (Blind) signature protocol.
  - The user picks a random serial number of a coin.
  - At the end the user receives a signature of the serial number, but the banks is unaware of the users's serial number.
  - This signed number represents an anonymous token. 
5. In can the current user wants to make payment to another user, then current user sends to the next user the "signed token" and the "plain text value of the token/serial number".
6. The receiving user will immediately contact the bank and try to deposit the anonymous coin. (Inorder to verify - no double spends, etc)
8. Tha bank gets the message to deposit the coin and also receives the "plain text" and "signature". 
  - It verifies the signature is valid.
  - It also verifies the serial number that it received is not in the list of "spent coins". (double spend attack check); 
  - It then puts the serial number in the spent coins table so that no doble-spends can occur.
  - It then adds the amount to next user's account and sends a message to the next user.
  (Since the bank din't see the serial number initially, the bank doesn't know who is the owner of the coin);
7. On verification of the next coin the next user will allow the completion of the transaction.

**** Bank cannot link the two users.

* Drawbacks
--------------
Depends on trusting the bank.
(Anonymous e-cash: Model is different from Bitcoin) 

Anonymous e-cash through blind signatures
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
# Bank model
------------------    ---------------
| User | Balance |    | Spent coins |
------------------    ---------------
|  ... |   ...   |    |     ...     |
------------------    ---------------
|   A  |    10   |    |             |
------------------    ---------------
|  ...  |   ...  |    |             |
------------------    ---------------
|   B   |   5    |    |             |
------------------    ---------------

# User A Withdraw anonymous e-cash
-----------------------------------
        
User A  ------Withdraw anonymous coin----------------------->     Bank
        --------Serial Number(unknown to bank)-------------->
        <------Signed Serial Number(unknown to bank)---------
                {3574132415345454}

# User A wants to send the anonymous coin to user B
------------------------------------------------------

User A
  |
  |
  |
 \ /
User B  ----- Deposit coin #3574132415345454 (plain text)-------->    Bank
                {3574132415345454} (signed serial number)
        <---------------------OK----------------------------------                

# Account balance  
-------------------

(A withdraws $1 from account and gives it to B);

------------------    ---------------
| User | Balance |    | Spent coins |
------------------    ---------------
|  ... |   ...   |    |     ...     |
------------------    ---------------
|   A  |    9    |    |   35741...  |
------------------    ---------------
|  ...  |   ...  |    |             |
------------------    ---------------
|   B   |   6    |    |             |
------------------    ---------------

* Anonymity and Decentralized : in conflict
---------------------------------------------
-> Interactive protocols with bank are hard to decentralize.
-> Decentralization often achieved via public traceability to enforce security.

Q. Unlinkability in Bitcoin could mean
1. It's hard to link different addresses owned by the same user   -   true. 
2. It's hard to link different transactions made by the same user   -   true.
3. It's hard to link different transactions having the same output address.

----------------------------------------------------------------------------------------------------------------------------------------
6.2 How to de-anonymize Bitcoin
----------------------------------------------------------------------------------------------------------------------------------------
-> Bitcoin is pseudonymous and hence all your transactions many get linked together.
-> In order to makle sure that the transactions are unlinkable:
  - Best practice - always receive a fresh address (transactions are always new addresses so no way to track coins).
  - But is the above approach still unlinkable?
  [* Say Alice has bitcoins at different transaction addresses - 5 , 3 , 6; 
    - Alice wants to buy a tea pot of 8 bit coins
    - She has to combine her coins to make the purchase - the transaction addresses are combines - linking addresses
    
    - The adversary can observe the transaction addresses and link it to the user];
    
 * Linking Addresses
 -----------------------
 -> Shared spending - it is an evidence of joint control.
 -> Addresses can be linked transitively.
 
* Change Addresses
---------------------
 [* Say Alice has bitcoins at different transaction addresses - 5 , 3 , 6; 
    - Alice wants to buy a tea pot of 8.5 bit coins
    - She has to combine her coins to make the purchase, but here denominations don't exactly match up the pot cost.
    - So she is gonna make a change address. 
    - She combines 3, 6 and pays 8.5 for the tea pot and 0.5 to herself.
    
    - Here the adversary is not sure which is the address to user and that of the mechant].

#### Trick - each address can be used as a change address only once. (Alice send 0.5 back to herself and hence uses the same transaction address as the change address  - this can occur only once.);
 # could have  alot of false positives.   
    
* In 2013 , a Bitcoin theft did occur - by using the principles of linking address and change addresses they were able to trace huge service providers and the block-chain the steal the bitcoins.

-> Research paper -> "A Fistful of Bitcoins: Characterizing Payments Among Men with No Names" 
  - They tried to identify the identities on the block-chain , retrace the Bitcoin theft.
  - They were not able to do by looking at their websites since each time to make a transaction a new address is posted, and unless it is a valid transaction it doesn't end up in the block-chain.
  - So the only way the authors were able to reveal the bitcoin service providers or users was through actually interacting with the service providers.
  - They purchased about 344 bitcoins(transactions);
  - Was they were interacting with the websites, then through the link address and changes address principles they were able to identify the service providers.
  
* From services to users
-------------------------
(How to identify individual users in the Bitcoin network?) 
1. High centralization in service providers.
  - Most flows pass through one of these - in a traceable way. (Each individual will in some manner be linked to major service providers);
2. Address - identity links in forums. (Users can post addresses in the links, and when one address is captured then through link address and change address - all transactions of the users can be found).  
  
# Block-chain - > Application Layer;
# Peer-to-Peer netwrok -> Network Layer;

* Network-layer de-anonymization
-------------------------------------
-> Dan Kaminsky (Blackhat 2011 talk);
-> "The first node to inform you of a transaction is probably the source itself." (link between transactions and IP address -> close personal identity); (When a transaction is made, the source node send the message to the other nodes);
-> This issue of communicating anonymously can be solved : use Tor

* use Tor
-----------
-> Caveat : Tor is intended for low-latency activities such as web browsing. (response immediately);
-> Bitcoins - high latency (takes time for transactions to propagate through network and to get confirmed in the blockchain);
-> Mix nets - might provide better anonymity.
-> BUT Tor is deployed and works for now.

Q. Which of the following observations would suggest that addresses A and B may be controlled by the same user/entity?

1. There is a transaction with A as an input address and B as an output address
2. There is a transaction with both A and B as input addresses  -  Correct.
3. There is a transaction with both A and B as output addresses

----------------------------------------------------------------------------------------------------------------------------------------
6.3 Mixing
----------------------------------------------------------------------------------------------------------------------------------------
-> To protect anonymity, use intermediary.
  - Users send transactions to intrermediary service.
  - The intermediary doesn't keep track of the user and the transaction. 
  - When the user withdraws an amount it is drawn from a random address from the intermediary.
  - So there is no link from the input transaction address to the output transaction address, and no one can identify it from an external public chain on something else.
  
  User Input ----xx --> Intermediary --> yy---- Output.
  
-> Like online wallets - they store money until we need them.  

* Dedicated mixing services
----------------------------
1. Promise not to keep records.
2. Don't ask for your identity.

* Online Wallets
-------------------
-> Reputable, often regulated businesses.

1. Typically require identity keep records -> no anonymity w.r.t wallet service.
2. If Users trust the online wallet service with their bitcoins
    -> then users will keep bitcoins in the wallet service longer than they would have kept in mixing services.
    -> It provides bigger anonymity set w.r.t everyone else. (The wallet service will know the identity, but anybody looking into the block-chain will have no idea);
    
"Online wallets - provide the anoanymity - as that of traditional banking system."

* Consider a user for whom the trust requirements and anonymity properties for online wallets are unacceptable.
------------------------------------------------------------------------
-> Mixing -> mix,mixer, laundry;

* Principles for mixing services
---------------------------------
1. Use a series of mixes
  - Mixes should implement a standard API to make this easy.
  
                      Mix 1                   Mix 2               Mix 3
                    ----------              --------              ----------
                    |        |              |        |            |        |
 User A  x----------|----X   |              |   X----|------+-----|---x    |
                    |        |              |        |            |        |
                    |        |              |        |            |        |
                    |    X   |              |   x    |            |   x----|-----------User A
                    |        |              |        |            |        |
                    |        |              |        |            |        |
                    |    X---|------+-------|---x    |            |   x    |
                    |        |              |        |            |        |
                    ----------              ----------            ----------
-> A series of address changes a user viewing the block-chain will not be able to figure out transaction / link identity.

2. Uniform transactions.
    - In particular: all mix transactions must have the same value! (chunk size);

3. Client side must be automated.
    - Built in desktop wallet softwares - so that the software automatically knows how to interact with the mixes in order to preserve the user's identity.

4. Fees must be all-or-nothing (Mixing services are a business and hence must be paid - 1/1000 hashes);
- Probabilistic fees:
    0.1% mixing fee = mix will swallow chunk with 0.1% chance.

**** "Current mixes follow none of these principles."
  
